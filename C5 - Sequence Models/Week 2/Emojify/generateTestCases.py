# New Generate Test Cases 
from solutions import *
import numpy as np 
import math 
import os,sys
# import copy 
# from keras.callbacks import History 
# import tensorflow as tf
sys.path.append('../')
sys.path.append('../../')

from grader_support import stdout_redirector
from grader_support import util

os.environ['TF_CPP_MIN_LOG_LEVEL']='3'

# This grader is for the Emojify assignment

mFiles = [
    "sentence_to_avg.py",
    "model.py",
    "sentences_to_indices.py",
    "pretrained_embedding_layer.py",
    "Emojify_V2.py"
]

np.random.seed(3)


# generating test cases for sentence_to_avg

X = np.asarray(['I am going to the bar tonight', 'I love you', 'miss you my dear',
 'Lets go party and drinks','Congrats on the new job','Congratulations',
 'I am so happy for you', 'Why are you feeling bad', 'What is wrong with you',
 'You totally deserve this prize', 'Let us go play football',
 'Are you down for football this afternoon', 'Work hard play harder',
 'It is suprising how people can be dumb sometimes',
 'I am very disappointed','It is the best day in my life',
 'I think I will end up alone','My life is so boring','Good job',
 'Great so awesome'])

Y = np.asarray([4, 0, 0, 3, 4, 4, 4, 3, 2, 4, 1, 1, 2, 3, 2, 1, 1, 3, 4, 4])

diw = {69: 'i', 1: 'am', 2: 'going', 3: 'to', 4: 'the', 5: 'bar', 6: 'tonight', 7: 'love', 8: 'you', 9: 'miss', 10: 'my', 11: 'dear', 12: 'lets', 13: 'go', 14: 'party', 15: 'and', 16: 'drinks', 17: 'congrats', 18: 'on', 19: 'new', 20: 'job', 21: 'congratulations', 22: 'so', 23: 'happy', 24: 'for', 25: 'why', 26: 'are', 27: 'feeling', 28: 'bad', 29: 'what', 30: 'is', 31: 'wrong', 32: 'with', 33: 'totally', 34: 'deserve', 35: 'this', 36: 'prize', 37: 'let', 38: 'us', 39: 'play', 40: 'football', 41: 'down', 42: 'afternoon', 43: 'work', 44: 'hard', 45: 'harder', 46: 'it', 47: 'suprising', 48: 'how', 49: 'people', 50: 'can', 51: 'be', 52: 'dumb', 53: 'sometimes', 54: 'very', 55: 'disappointed', 56: 'best', 57: 'day', 58: 'in', 59: 'life', 60: 'think', 61: 'will', 62: 'end', 63: 'up', 64: 'alone', 65: 'boring', 66: 'good', 67: 'great', 68: 'awesome'}
# dwi = {'i': 185457, 'am': 52943, 'going': 163745, 'to': 360915, 'the': 357266, 'bar': 68431, 'tonight': 361859, 'love': 226278, 'you': 394475, 'miss': 246253, 'my': 254258, 'dear': 118309, 'lets': 220930, 'go': 163237, 'party': 278093, 'and': 54718, 'drinks': 129414, 'congrats': 107277, 'on': 269798, 'new': 259972, 'job': 198213, 'congratulations': 107283, 'so': 336114, 'happy': 173081, 'for': 151349, 'why': 386984, 'are': 58997, 'feeling': 146352, 'bad': 65963, 'what': 386307, 'is': 192973, 'wrong': 390470, 'with': 388711, 'totally': 362776, 'deserve': 121794, 'this': 358160, 'prize': 292631, 'let': 220870, 'us': 374021, 'play': 286375, 'football': 151266, 'down': 128527, 'afternoon': 47835, 'work': 389836, 'hard': 173236, 'harder': 173320, 'it': 193716, 'suprising': 348287, 'how': 182540, 'people': 280944, 'can': 90548, 'be': 71090, 'dumb': 130637, 'sometimes': 337305, 'very': 377946, 'disappointed': 124906, 'best': 74390, 'day': 117874, 'in': 188481, 'life': 222138, 'think': 357970, 'will': 387696, 'end': 136979, 'up': 373317, 'alone': 52315, 'boring': 81044, 'good': 164328, 'great': 166369, 'awesome': 64354}
dwi = {'happy': 23, 'to': 3, 'harder': 45, 'feeling': 27, 'alone': 64, 'think': 60, 'bad': 28, 'i': 69, 'dear': 11, 'it': 46, 'down': 41, 'be': 51, 'work': 43, 'great': 67, 'play': 39, 'this': 35, 'the': 4, 'love': 7, 'job': 20, 'sometimes': 53, 'and': 15, 'day': 57, 'best': 56, 'bar': 5, 'disappointed': 55, 'on': 18, 'congratulations': 21, 'let': 37, 'awesome': 68, 'can': 50, 'good': 66, 'new': 19, 'life': 59, 'us': 38, 'what': 29, 'up': 63, 'going': 2, 'will': 61, 'miss': 9, 'totally': 33, 'with': 32, 'very': 54, 'so': 22, 'my': 10, 'tonight': 6, 'are': 26, 'am': 1, 'suprising': 47, 'deserve': 34, 'lets': 12, 'football': 40, 'is': 30, 'go': 13, 'drinks': 16, 'congrats': 17, 'you': 8, 'party': 14, 'people': 49, 'prize': 36, 'in': 58, 'hard': 44, 'why': 25, 'for': 24, 'end': 62, 'afternoon': 42, 'how': 48, 'wrong': 31, 'dumb': 52, 'boring': 65}

d = {'i': np.asarray([  1.18910000e-01,   1.52550000e-01,  -8.20730000e-02,
        -7.41440000e-01,   7.59170000e-01,  -4.83280000e-01,
        -3.10090000e-01,   5.14760000e-01,  -9.87080000e-01,
         6.17570000e-04,  -1.50430000e-01,   8.37700000e-01,
        -1.07970000e+00,  -5.14600000e-01,   1.31880000e+00,
         6.20070000e-01,   1.37790000e-01,   4.71080000e-01,
        -7.28740000e-02,  -7.26750000e-01,  -7.41160000e-01,
         7.52630000e-01,   8.81800000e-01,   2.95610000e-01,
         1.35480000e+00,  -2.57010000e+00,  -1.35230000e+00,
         4.58800000e-01,   1.00680000e+00,  -1.18560000e+00,
         3.47370000e+00,   7.78980000e-01,  -7.29290000e-01,
         2.51020000e-01,  -2.61560000e-01,  -3.46840000e-01,
         5.58410000e-01,   7.50980000e-01,   4.98300000e-01,
        -2.68230000e-01,  -2.74430000e-03,  -1.82980000e-02,
        -2.80960000e-01,   5.53180000e-01,   3.77060000e-02,
         1.85550000e-01,  -1.50250000e-01,  -5.75120000e-01,
        -2.66710000e-01,   9.21210000e-01]), 'am': np.asarray([ 0.34664 ,  0.39805 ,  0.4897  , -0.51421 ,  0.54574 , -1.2005  ,
        0.32107 ,  0.74004 , -1.4979  , -0.19651 , -0.12631 , -0.37703 ,
       -0.62569 ,  0.038792,  1.0579  ,  0.77199 , -0.18589 ,  1.3032  ,
       -0.72128 ,  0.40231 ,  0.066442,  1.2315  ,  0.93956 ,  1.3903  ,
        1.5334  , -1.473   , -0.34997 ,  0.31562 ,  0.90691 ,  0.45498 ,
        2.5481  ,  0.1641  , -0.607   ,  0.27061 , -0.79072 , -1.146   ,
        0.91795 , -0.11797 ,  0.23526 , -0.12659 ,  0.66527 , -0.91816 ,
        0.10048 ,  0.70457 , -0.21777 ,  0.52479 , -0.54452 ,  0.086576,
        0.34037 ,  1.3588  ]), 'going': np.asarray([  1.42120000e-02,  -1.80110000e-01,   2.34780000e-01,
        -2.50380000e-01,   2.68160000e-01,  -5.48870000e-01,
        -7.44360000e-01,   5.20340000e-01,  -2.85710000e-01,
         1.53760000e-01,  -5.59160000e-01,   1.04230000e-01,
        -1.01790000e+00,   1.06340000e-02,   9.52800000e-01,
         5.18110000e-01,   7.86240000e-01,  -2.00990000e-01,
        -2.88160000e-01,  -6.57350000e-01,   1.83070000e-02,
         3.19300000e-01,   3.44560000e-01,   2.65160000e-01,
         7.20610000e-01,  -1.86990000e+00,  -2.53840000e-01,
        -3.00760000e-03,   1.22030000e+00,  -9.20190000e-01,
         3.40570000e+00,   1.13510000e+00,  -5.84060000e-01,
        -1.26110000e-01,  -3.50170000e-02,  -2.99410000e-01,
         3.14750000e-02,   3.38830000e-01,   3.89100000e-01,
        -4.29990000e-01,  -8.52640000e-01,  -3.17510000e-01,
        -8.91630000e-02,   5.31760000e-01,   4.37730000e-02,
         6.09980000e-02,   2.47620000e-01,  -1.66790000e-01,
         6.15950000e-02,   6.99270000e-01]), 'to': np.asarray([ 0.68047 , -0.039263,  0.30186 , -0.17792 ,  0.42962 ,  0.032246,
       -0.41376 ,  0.13228 , -0.29847 , -0.085253,  0.17118 ,  0.22419 ,
       -0.10046 , -0.43653 ,  0.33418 ,  0.67846 ,  0.057204, -0.34448 ,
       -0.42785 , -0.43275 ,  0.55963 ,  0.10032 ,  0.18677 , -0.26854 ,
        0.037334, -2.0932  ,  0.22171 , -0.39868 ,  0.20912 , -0.55725 ,
        3.8826  ,  0.47466 , -0.95658 , -0.37788 ,  0.20869 , -0.32752 ,
        0.12751 ,  0.088359,  0.16351 , -0.21634 , -0.094375,  0.018324,
        0.21048 , -0.03088 , -0.19722 ,  0.082279, -0.09434 , -0.073297,
       -0.064699, -0.26044 ]), 'the': np.asarray([  4.18000000e-01,   2.49680000e-01,  -4.12420000e-01,
         1.21700000e-01,   3.45270000e-01,  -4.44570000e-02,
        -4.96880000e-01,  -1.78620000e-01,  -6.60230000e-04,
        -6.56600000e-01,   2.78430000e-01,  -1.47670000e-01,
        -5.56770000e-01,   1.46580000e-01,  -9.50950000e-03,
         1.16580000e-02,   1.02040000e-01,  -1.27920000e-01,
        -8.44300000e-01,  -1.21810000e-01,  -1.68010000e-02,
        -3.32790000e-01,  -1.55200000e-01,  -2.31310000e-01,
        -1.91810000e-01,  -1.88230000e+00,  -7.67460000e-01,
         9.90510000e-02,  -4.21250000e-01,  -1.95260000e-01,
         4.00710000e+00,  -1.85940000e-01,  -5.22870000e-01,
        -3.16810000e-01,   5.92130000e-04,   7.44490000e-03,
         1.77780000e-01,  -1.58970000e-01,   1.20410000e-02,
        -5.42230000e-02,  -2.98710000e-01,  -1.57490000e-01,
        -3.47580000e-01,  -4.56370000e-02,  -4.42510000e-01,
         1.87850000e-01,   2.78490000e-03,  -1.84110000e-01,
        -1.15140000e-01,  -7.85810000e-01]), 'bar': np.asarray([ -9.45310000e-01,   3.96860000e-01,  -8.06050000e-01,
        -3.02150000e-01,   2.77360000e-01,  -1.00190000e-01,
        -4.05000000e-01,  -1.00950000e-01,  -6.59340000e-02,
        -4.72580000e-02,  -2.08280000e-01,  -2.57210000e-01,
         6.87500000e-02,   9.37510000e-01,  -8.14830000e-02,
         1.34600000e-01,   2.73020000e-02,  -1.80960000e-01,
        -3.56380000e-01,  -8.81040000e-01,   1.19510000e+00,
         5.55560000e-02,  -3.17410000e-01,   1.02440000e+00,
        -8.47680000e-01,  -1.59590000e+00,   2.16570000e-02,
         4.36280000e-01,   8.83880000e-04,  -4.18200000e-01,
         2.12470000e+00,  -4.33320000e-01,  -1.08160000e+00,
         3.36160000e-01,   3.33990000e-01,  -2.00640000e-01,
         5.86330000e-01,   9.01860000e-02,   7.50540000e-01,
         4.85000000e-01,   1.73700000e-01,   6.81290000e-01,
        -1.68100000e-01,   6.12650000e-01,   7.68750000e-02,
        -1.97970000e-01,  -9.95550000e-02,  -1.02310000e+00,
         9.53940000e-01,  -6.35000000e-02]), 'tonight': np.asarray([-0.24077  ,  0.64182  , -0.24113  ,  0.75178  ,  0.53864  ,
       -1.1493   , -0.61891  ,  0.9137   , -0.53606  ,  0.17756  ,
       -0.76413  ,  0.016193 , -0.51358  ,  0.93094  ,  1.2053   ,
        0.4189   ,  0.16474  , -0.13126  , -1.0023   ,  0.007583 ,
        0.0035247,  0.52336  ,  0.68604  ,  0.35461  ,  0.54968  ,
       -0.59051  , -0.26113  ,  0.61433  ,  0.7793   , -1.1467   ,
        2.0951   ,  1.39     , -0.30046  , -0.18278  , -0.45401  ,
       -0.13385  ,  0.90233  , -0.28826  ,  0.030881 , -0.63533  ,
       -0.50969  , -0.15814  , -1.1477   , -0.16897  , -0.42309  ,
        0.67139  ,  0.0269   , -0.026077 , -0.3064   ,  1.6869   ]), 'love': np.asarray([-0.13886  ,  1.1401   , -0.85212  , -0.29212  ,  0.75534  ,
        0.82762  , -0.3181   ,  0.0072204, -0.34762  ,  1.0731   ,
       -0.24665  ,  0.97765  , -0.55835  , -0.090318 ,  0.83182  ,
       -0.33317  ,  0.22648  ,  0.30913  ,  0.026929 , -0.086739 ,
       -0.14703  ,  1.3543   ,  0.53695  ,  0.43735  ,  1.2749   ,
       -1.4382   , -1.2815   , -0.15196  ,  1.0506   , -0.93644  ,
        2.7561   ,  0.58967  , -0.29473  ,  0.27574  , -0.32928  ,
       -0.201    , -0.28547  , -0.45987  , -0.14603  , -0.69372  ,
        0.070761 , -0.19326  , -0.1855   , -0.16095  ,  0.24268  ,
        0.20784  ,  0.030924 , -1.3711   , -0.28606  ,  0.2898   ]), 'you': np.asarray([ -1.09190000e-03,   3.33240000e-01,   3.57430000e-01,
        -5.40410000e-01,   8.20320000e-01,  -4.93910000e-01,
        -3.25880000e-01,   1.99720000e-03,  -2.38290000e-01,
         3.55540000e-01,  -6.06550000e-01,   9.89320000e-01,
        -2.17860000e-01,   1.12360000e-01,   1.14940000e+00,
         7.32840000e-01,   5.11820000e-01,   2.92870000e-01,
         2.83880000e-01,  -1.35900000e+00,  -3.79510000e-01,
         5.09430000e-01,   7.07100000e-01,   6.29410000e-01,
         1.05340000e+00,  -2.17560000e+00,  -1.32040000e+00,
         4.00010000e-01,   1.57410000e+00,  -1.66000000e+00,
         3.77210000e+00,   8.69490000e-01,  -8.04390000e-01,
         1.83900000e-01,  -3.43320000e-01,   1.07140000e-02,
         2.39690000e-01,   6.67480000e-02,   7.01170000e-01,
        -7.37020000e-01,   2.08770000e-01,   1.15640000e-01,
        -1.51900000e-01,   8.59080000e-01,   2.26200000e-01,
         1.65190000e-01,   3.63090000e-01,  -4.56970000e-01,
        -4.89690000e-02,   1.13160000e+00]), 'miss': np.asarray([ -3.22730000e-01,   5.61820000e-01,  -6.63630000e-01,
         3.88830000e-01,  -4.65580000e-02,   2.23280000e-01,
        -7.56910000e-01,   7.08530000e-01,   5.57140000e-01,
        -5.99960000e-02,   3.12350000e-01,   1.67410000e-01,
        -5.45680000e-01,  -3.87650000e-01,   1.23090000e+00,
         3.47660000e-01,  -5.00170000e-02,  -4.98040000e-02,
        -6.62820000e-01,   2.28540000e-01,  -7.84430000e-01,
         6.58230000e-01,   5.60990000e-01,   3.32180000e-01,
         5.30490000e-01,  -1.36110000e+00,  -4.94520000e-01,
         2.77110000e-01,  -2.29820000e-01,  -1.14920000e+00,
         1.50280000e+00,   1.09160000e+00,  -9.84640000e-02,
         3.93490000e-04,   2.57530000e-01,  -1.54700000e-01,
         2.75950000e-01,   6.47500000e-01,  -5.65370000e-02,
        -1.30460000e+00,  -5.82000000e-01,   1.28380000e-01,
        -1.14160000e-01,  -8.08360000e-01,  -8.39210000e-01,
         2.56090000e-01,   1.56290000e-01,  -9.72990000e-01,
         1.11300000e-01,   4.45000000e-01]), 'my': np.asarray([-0.27279  ,  0.77515  , -0.10181  , -0.9166   ,  0.90477  ,
       -0.070501 , -0.47569  ,  0.44608  ,  0.1697   ,  0.072352 ,
       -0.16306  ,  0.86852  , -0.76634  , -0.016103 ,  0.78492  ,
        0.2952   , -0.74859  ,  0.2099   ,  0.65537  , -0.62334  ,
       -0.43711  ,  1.1854   ,  0.47519  ,  0.0093866,  1.1377   ,
       -2.4394   , -1.5619   ,  0.49001  ,  1.0985   , -0.97371  ,
        3.4628   ,  1.0408   , -0.65138  ,  0.57189  , -0.12523  ,
        0.26705  ,  0.16373  ,  0.41105  ,  0.7509   , -0.77923  ,
        0.03638  , -0.28609  , -0.72365  ,  0.63511  ,  0.089441 ,
       -0.30133  ,  0.36518  , -0.73367  ,  0.040383 ,  0.26657  ]), 'dear': np.asarray([-0.29946 ,  1.172   ,  0.3289  , -0.74413 ,  1.0811  , -0.1525  ,
       -0.19838 ,  0.052137, -0.34856 , -0.20578 , -0.70299 ,  1.4999  ,
        0.23187 , -0.22932 ,  0.45783 , -0.057641, -0.42777 ,  0.35264 ,
        1.0389  ,  0.59088 , -0.49418 ,  1.0761  ,  0.58225 ,  0.5137  ,
        1.2708  , -1.0246  , -1.0251  , -0.25016 ,  0.27673 , -0.39602 ,
        0.95889 ,  0.43321 , -0.098083,  0.54379 , -0.39457 , -0.27019 ,
        0.15541 , -0.94886 ,  0.64448 , -0.75184 ,  0.24743 , -0.17944 ,
       -0.16587 , -0.045956,  0.47237 ,  0.69745 , -0.43758 , -0.27562 ,
        0.49816 ,  0.83257 ]), 'lets': np.asarray([ 0.30423 , -0.24405 ,  1.0303  ,  0.039387,  0.23262 , -0.39686 ,
       -0.36583 , -0.18573 ,  0.31051 ,  0.48486 , -0.035048,  0.76138 ,
        0.42608 ,  0.58651 ,  0.35601 ,  0.73256 , -0.092297, -0.1974  ,
        0.7983  , -1.1569  ,  0.43523 ,  0.2619  , -0.45631 ,  1.1645  ,
        0.7541  , -0.89915 ,  0.068323, -0.40341 ,  0.53135 , -1.1687  ,
        1.8254  ,  0.40052 , -0.76422 , -0.076685, -0.26669 ,  0.2565  ,
       -0.048207, -0.46385 , -0.037947, -0.94777 ,  0.9061  ,  0.28996 ,
        0.096715,  0.5577  , -0.1583  , -0.043148,  1.0421  , -0.43296 ,
       -0.096168,  0.43463 ]), 'go': np.asarray([  1.48280000e-01,   1.77610000e-01,   4.23460000e-01,
        -3.14890000e-01,   3.22730000e-01,  -7.24130000e-01,
        -7.89550000e-01,   4.92140000e-01,  -2.06930000e-01,
        -5.50880000e-04,  -4.78770000e-01,   2.88530000e-01,
        -5.73760000e-01,   2.72170000e-01,   1.11290000e+00,
         5.78080000e-01,   6.93210000e-01,  -2.86520000e-01,
        -5.45450000e-02,  -6.18260000e-01,   1.72270000e-01,
         2.92630000e-01,   3.81840000e-01,   6.21860000e-01,
         5.54610000e-01,  -1.74110000e+00,  -2.88020000e-01,
        -1.71400000e-01,   7.47430000e-01,  -1.01350000e+00,
         3.35960000e+00,   1.13700000e+00,  -1.00280000e+00,
         1.76850000e-01,  -6.17950000e-03,  -6.34910000e-02,
         1.90770000e-01,   4.40460000e-02,   3.82280000e-01,
        -4.16070000e-01,  -5.03590000e-01,  -8.38030000e-02,
         1.75080000e-01,   4.04200000e-01,   7.73240000e-02,
         1.74150000e-01,   1.25410000e-01,  -2.18200000e-01,
         1.29710000e-01,   3.29530000e-01]), 'party': np.asarray([ -5.52700000e-01,  -1.83340000e-01,   4.11460000e-01,
         1.87100000e-01,   3.23660000e-01,   8.14010000e-01,
        -2.58340000e-01,  -3.79910000e-02,  -1.28930000e+00,
        -6.93910000e-01,  -4.35240000e-01,  -8.44170000e-01,
        -4.43500000e-01,   8.17660000e-01,  -4.22730000e-01,
        -2.58190000e-01,   2.22410000e-01,  -2.44980000e-01,
         7.48570000e-01,  -1.88360000e-01,  -2.07980000e-01,
        -1.09650000e-01,   4.30510000e-01,   3.48850000e-01,
         4.70030000e-03,  -1.87220000e+00,  -4.56930000e-01,
        -5.90190000e-01,  -1.07990000e+00,   8.91010000e-01,
         3.29060000e+00,   6.09320000e-01,  -1.83940000e+00,
        -1.39300000e-03,  -1.20880000e+00,  -5.42400000e-01,
        -2.03980000e-01,  -1.06500000e-02,  -4.78150000e-01,
        -3.58880000e-01,  -4.34130000e-01,   1.09430000e-01,
        -1.53870000e+00,  -1.06080000e-01,  -3.05070000e-01,
         1.39780000e-03,  -1.93320000e+00,  -4.28900000e-01,
         1.01750000e+00,  -5.99310000e-01]), 'and': np.asarray([ 0.26818 ,  0.14346 , -0.27877 ,  0.016257,  0.11384 ,  0.69923 ,
       -0.51332 , -0.47368 , -0.33075 , -0.13834 ,  0.2702  ,  0.30938 ,
       -0.45012 , -0.4127  , -0.09932 ,  0.038085,  0.029749,  0.10076 ,
       -0.25058 , -0.51818 ,  0.34558 ,  0.44922 ,  0.48791 , -0.080866,
       -0.10121 , -1.3777  , -0.10866 , -0.23201 ,  0.012839, -0.46508 ,
        3.8463  ,  0.31362 ,  0.13643 , -0.52244 ,  0.3302  ,  0.33707 ,
       -0.35601 ,  0.32431 ,  0.12041 ,  0.3512  , -0.069043,  0.36885 ,
        0.25168 , -0.24517 ,  0.25381 ,  0.1367  , -0.31178 , -0.6321  ,
       -0.25028 , -0.38097 ]), 'drinks': np.asarray([ 0.18539 , -0.30933 , -0.91416 ,  0.17986 ,  0.43113 ,  0.26739 ,
       -0.63414 , -0.4626  ,  0.89267 ,  1.3099  ,  0.33861 ,  0.27632 ,
        0.75899 ,  0.058297,  0.5976  ,  0.19091 , -0.67459 ,  0.81045 ,
       -0.08114 , -1.981   ,  1.3042  ,  0.50831 ,  1.2879  ,  0.84307 ,
       -0.76808 , -0.32957 ,  0.061111,  0.74599 ,  0.84949 ,  0.54812 ,
        1.6615  ,  1.0371  , -0.35059 ,  1.1602  ,  0.38933 , -0.49988 ,
       -0.79961 ,  0.86017 ,  0.43495 ,  0.36262 ,  0.56211 ,  0.62906 ,
       -0.24666 ,  0.7835  ,  0.61416 ,  0.66516 , -1.0603  , -0.57106 ,
        0.46365 ,  0.17851 ]), 'congrats': np.asarray([ -5.70920000e-02,   5.04180000e-02,   2.48050000e-01,
         6.28790000e-02,  -3.66510000e-01,  -5.58390000e-01,
         7.96300000e-01,   5.50320000e-01,  -1.29480000e-01,
         2.82540000e-01,  -9.35950000e-01,   7.35330000e-01,
         5.61630000e-01,   7.58200000e-04,   4.22260000e-01,
        -3.99030000e-01,  -4.65830000e-01,   3.82710000e-01,
         4.60270000e-01,   1.48260000e-01,   1.27760000e-01,
         7.24220000e-02,   5.86580000e-01,   7.49630000e-02,
         1.22610000e+00,   7.60750000e-02,   3.81510000e-01,
         1.41770000e-01,   5.91010000e-01,  -9.65130000e-01,
        -1.21780000e+00,   9.56730000e-01,  -9.90670000e-01,
         4.67990000e-01,  -3.62620000e-01,  -4.91490000e-02,
         1.37410000e-01,  -4.34850000e-01,   1.21810000e-01,
        -4.58870000e-01,  -1.32990000e-01,  -2.58790000e-01,
         1.13250000e-02,  -3.08230000e-01,   1.53970000e-01,
         4.33950000e-01,   7.08730000e-01,   2.95020000e-01,
         7.38500000e-01,   5.40940000e-01]), 'on': np.asarray([ 0.30045  ,  0.25006  , -0.16692  ,  0.1923   ,  0.026921 ,
       -0.079486 , -0.91383  , -0.1974   , -0.053413 , -0.40846  ,
       -0.26844  , -0.28212  , -0.5      ,  0.1221   ,  0.3903   ,
        0.17797  , -0.4429   , -0.40478  , -0.9505   , -0.16897  ,
        0.77793  ,  0.33525  ,  0.3346   , -0.1754   , -0.12017  ,
       -1.7861   ,  0.29241  ,  0.55933  ,  0.029982 , -0.32417  ,
        3.9297   ,  0.1088   , -0.57335  , -0.17842  ,  0.0041748,
       -0.16309  ,  0.45077  , -0.16123  , -0.17311  , -0.087889 ,
       -0.089032 ,  0.062001 , -0.19946  , -0.38863  , -0.18232  ,
        0.060751 ,  0.098603 , -0.07131  ,  0.23052  , -0.51939  ]), 'new': np.asarray([  1.95110000e-01,   5.07390000e-01,   1.47090000e-03,
         4.19140000e-02,  -1.67590000e-01,   3.75170000e-02,
        -1.39700000e+00,  -9.23980000e-01,  -2.42960000e-01,
        -1.51710000e-01,  -4.78290000e-01,   5.46120000e-02,
        -2.49860000e-01,   3.83980000e-01,   1.61820000e-02,
         3.49380000e-01,  -2.26270000e-01,   8.66180000e-02,
        -4.10010000e-01,  -1.81390000e-01,   7.56070000e-01,
        -2.62000000e-02,  -6.95570000e-01,   1.08740000e-01,
        -4.75390000e-01,  -1.80950000e+00,  -1.69400000e-01,
        -5.98630000e-02,  -1.68060000e-01,  -9.45460000e-02,
         3.66100000e+00,   4.14620000e-02,  -2.91610000e-01,
        -6.97720000e-01,   3.08050000e-01,  -2.84570000e-01,
         1.32170000e-01,  -7.64300000e-03,  -9.23900000e-02,
        -4.92370000e-01,  -2.70550000e-01,   6.04250000e-02,
         9.51070000e-02,  -2.36790000e-01,  -8.61080000e-02,
         1.02430000e+00,  -2.27790000e-01,   3.04880000e-02,
        -1.42720000e-01,   4.54110000e-01]), 'job': np.asarray([-0.20343  , -0.045235 ,  0.23346  , -0.59289  ,  0.49678  ,
       -0.18233  , -1.113    ,  0.32915  , -0.083461 , -0.46827  ,
       -0.2608   ,  0.062637 , -0.69844  , -0.059388 ,  0.96493  ,
       -0.27605  ,  0.041796 ,  0.44355  ,  0.39495  , -0.7385   ,
        0.20983  ,  0.29984  , -0.52718  , -0.13907  ,  0.20699  ,
       -1.6566   , -0.15556  , -0.089032 ,  0.53444  ,  0.34896  ,
        3.1243   ,  0.7747   , -0.038041 , -0.63928  ,  0.0061523,
        0.51253  , -0.14199  ,  0.76461  ,  0.68417  , -0.84998  ,
       -0.56657  ,  0.039032 , -0.40812  ,  0.34442  , -0.27174  ,
       -0.54446  ,  0.055983 ,  0.78093  ,  0.0046384,  1.3011   ]), 'congratulations': np.asarray([-0.098995,  1.3586  , -0.16704 , -0.32321 ,  0.61358 , -1.2561  ,
       -0.24749 ,  1.2712  , -0.17758 ,  0.35208 , -0.65754 ,  0.94075 ,
        0.92373 , -0.041171, -0.23071 , -0.68954 , -0.98791 , -0.42584 ,
        0.81626 , -0.41026 , -0.036613,  0.64291 ,  0.47747 , -0.90263 ,
        1.4832  , -0.69925 , -0.13329 ,  0.12745 , -0.39035 , -0.56113 ,
        0.92246 ,  1.902   , -0.75908 ,  1.061   , -0.44958 , -0.64738 ,
        0.17264 ,  0.012265, -0.90771 , -0.41756 ,  0.81103 ,  0.025966,
       -1.1082  , -0.56211 , -0.4323  ,  0.083469, -0.57773 ,  0.92271 ,
       -0.32267 ,  0.10943 ]), 'so': np.asarray([  6.03080000e-01,  -3.20240000e-01,   8.88570000e-02,
        -5.51760000e-01,   5.31820000e-01,   4.70690000e-02,
        -3.62460000e-01,   5.70180000e-03,  -3.76650000e-01,
         2.25340000e-01,  -1.35340000e-01,   3.59880000e-01,
        -4.25180000e-01,   7.13240000e-02,   7.70650000e-01,
         5.67120000e-01,   4.12260000e-01,   1.24510000e-01,
         1.42300000e-01,  -9.65350000e-01,  -3.90530000e-01,
         3.41990000e-01,   5.69690000e-01,   3.16350000e-02,
         6.94650000e-01,  -1.92160000e+00,  -6.71180000e-01,
         5.79710000e-01,   8.60880000e-01,  -5.91050000e-01,
         3.77870000e+00,   3.04310000e-01,  -4.31030000e-02,
        -4.23980000e-01,  -6.39150000e-02,  -6.68220000e-02,
         6.19830000e-02,   5.63320000e-01,  -2.23350000e-01,
        -4.73860000e-01,  -4.70210000e-01,   9.17140000e-02,
         1.47780000e-01,   6.38050000e-01,  -1.43560000e-01,
        -2.29280000e-03,  -3.15000000e-01,  -2.51870000e-01,
        -2.68790000e-01,   3.66570000e-01]), 'happy': np.asarray([ 0.092086,  0.2571  , -0.58693 , -0.37029 ,  1.0828  , -0.55466 ,
       -0.78142 ,  0.58696 , -0.58714 ,  0.46318 , -0.11267 ,  0.2606  ,
       -0.26928 , -0.072466,  1.247   ,  0.30571 ,  0.56731 ,  0.30509 ,
       -0.050312, -0.64443 , -0.54513 ,  0.86429 ,  0.20914 ,  0.56334 ,
        1.1228  , -1.0516  , -0.78105 ,  0.29656 ,  0.7261  , -0.61392 ,
        2.4225  ,  1.0142  , -0.17753 ,  0.4147  , -0.12966 , -0.47064 ,
        0.3807  ,  0.16309 , -0.323   , -0.77899 , -0.42473 , -0.30826 ,
       -0.42242 ,  0.055069,  0.38267 ,  0.037415, -0.4302  , -0.39442 ,
        0.10511 ,  0.87286 ]), 'for': np.asarray([ 0.15272 ,  0.36181 , -0.22168 ,  0.066051,  0.13029 ,  0.37075 ,
       -0.75874 , -0.44722 ,  0.22563 ,  0.10208 ,  0.054225,  0.13494 ,
       -0.43052 , -0.2134  ,  0.56139 , -0.21445 ,  0.077974,  0.10137 ,
       -0.51306 , -0.40295 ,  0.40639 ,  0.23309 ,  0.20696 , -0.12668 ,
       -0.50634 , -1.7131  ,  0.077183, -0.39138 , -0.10594 , -0.23743 ,
        3.9552  ,  0.66596 , -0.61841 , -0.3268  ,  0.37021 ,  0.25764 ,
        0.38977 ,  0.27121 ,  0.043024, -0.34322 ,  0.020339,  0.2142  ,
        0.044097,  0.14003 , -0.20079 ,  0.074794, -0.36076 ,  0.43382 ,
       -0.084617,  0.1214  ]), 'why': np.asarray([ 0.32386  ,  0.011154 ,  0.23443  , -0.18039  ,  0.6233   ,
       -0.059467 , -0.62369  ,  0.12782  , -0.40932  ,  0.083849 ,
       -0.19215  ,  0.57834  , -0.49637  , -0.048521 ,  1.099    ,
        0.6298   ,  0.26122  , -0.11049  ,  0.16728  , -0.71227  ,
       -0.371    ,  0.51635  ,  0.54567  ,  0.27623  ,  0.82096  ,
       -2.1861   , -1.0027   ,  0.11441  ,  0.53145  , -0.86653  ,
        2.5888   ,  0.37458  , -0.51935  , -0.68734  , -0.14537  ,
       -0.53177  , -0.065899 ,  0.0077695,  0.31162  , -0.17694  ,
       -0.36669  ,  0.17919  ,  0.21591  ,  0.61326  ,  0.41495  ,
        0.17295  , -0.19359  ,  0.26349  , -0.19398  ,  0.58678  ]), 'are': np.asarray([ 0.96193  ,  0.012516 ,  0.21733  , -0.06539  ,  0.26843  ,
        0.33586  , -0.45112  , -0.60547  , -0.46845  , -0.18412  ,
        0.060949 ,  0.19597  ,  0.22645  ,  0.032802 ,  0.42488  ,
        0.49678  ,  0.65346  , -0.0274   ,  0.17809  , -1.1979   ,
       -0.40634  , -0.22659  ,  1.1495   ,  0.59342  , -0.23759  ,
       -0.93254  , -0.52502  ,  0.05125  ,  0.032248 , -0.72774  ,
        4.2466   ,  0.60592  ,  0.33397  , -0.85754  ,  0.4895   ,
        0.21744  , -0.13451  ,  0.0094912, -0.54173  ,  0.18857  ,
       -0.64506  ,  0.012695 ,  0.73452  ,  1.0032   ,  0.41874  ,
        0.16596  , -0.71085  ,  0.14032  , -0.38468  , -0.38712  ]), 'feeling': np.asarray([-0.07035 , -0.12121 , -0.52871 , -0.62478 ,  0.75067 , -0.05449 ,
        0.062919,  1.2127  , -0.59619 ,  0.69222 ,  0.40456 , -0.050729,
       -0.61109 , -0.20101 ,  0.36364 ,  0.28294 ,  0.019544,  0.16399 ,
        0.065644, -0.68719 , -1.0993  ,  1.3423  ,  0.22274 ,  0.16956 ,
        1.2745  , -1.1989  , -1.015   ,  0.85504 ,  1.3961  ,  0.1528  ,
        2.635   ,  1.231   ,  0.95117 , -0.55716 , -0.78802 , -0.33579 ,
       -0.23524 , -0.14593 ,  0.33506 , -0.74005 , -0.31389 , -0.33582 ,
       -0.28016 ,  0.49318 ,  0.20621 ,  0.47646 , -0.53762 , -0.20321 ,
       -0.21013 ,  0.47085 ]), 'bad': np.asarray([-0.17981 , -0.40407 , -0.1653  , -0.60687 , -0.39656 ,  0.12688 ,
       -0.053049,  0.38024 , -0.51008 ,  0.46593 , -0.30818 ,  0.79362 ,
       -0.85766 , -0.25143 ,  1.0448  ,  0.18628 ,  0.13688 ,  0.092588,
       -0.2236  , -0.13604 , -0.19482 ,  0.057702,  0.56133 ,  0.24823 ,
        0.627   , -1.8437  , -1.2573  ,  0.64482 ,  1.2787  , -0.29522 ,
        3.0493  ,  0.62079 ,  0.90369 , -0.030099, -0.13091 ,  0.30525 ,
       -0.070138, -0.12912 ,  0.72277 , -0.79774 , -0.70277 ,  0.038009,
        0.27192 ,  0.35679 ,  0.26493 ,  0.13037 , -0.01369 ,  0.33713 ,
        0.99956 ,  0.72031 ]), 'what': np.asarray([ 0.45323 ,  0.059811, -0.10577 , -0.333   ,  0.72359 , -0.08717 ,
       -0.61053 , -0.037695, -0.30945 ,  0.21805 , -0.43605 ,  0.47318 ,
       -0.76866 , -0.2713  ,  1.1042  ,  0.59141 ,  0.56962 , -0.18678 ,
        0.14867 , -0.67292 , -0.34672 ,  0.52284 ,  0.22959 , -0.072014,
        0.93967 , -2.3985  , -1.3238  ,  0.28698 ,  0.75509 , -0.76522 ,
        3.3425  ,  0.17233 , -0.51803 , -0.8297  , -0.29333 , -0.50076 ,
       -0.15228 ,  0.098973,  0.18146 , -0.1742  , -0.40666 ,  0.20348 ,
       -0.011788,  0.48252 ,  0.024598,  0.34064 , -0.084724,  0.5324  ,
       -0.25103 ,  0.62546 ]), 'is': np.asarray([  6.18500000e-01,   6.42540000e-01,  -4.65520000e-01,
         3.75700000e-01,   7.48380000e-01,   5.37390000e-01,
         2.22390000e-03,  -6.05770000e-01,   2.64080000e-01,
         1.17030000e-01,   4.37220000e-01,   2.00920000e-01,
        -5.78590000e-02,  -3.45890000e-01,   2.16640000e-01,
         5.85730000e-01,   5.39190000e-01,   6.94900000e-01,
        -1.56180000e-01,   5.58300000e-02,  -6.05150000e-01,
        -2.89970000e-01,  -2.55940000e-02,   5.55930000e-01,
         2.53560000e-01,  -1.96120000e+00,  -5.13810000e-01,
         6.90960000e-01,   6.62460000e-02,  -5.42240000e-02,
         3.78710000e+00,  -7.74030000e-01,  -1.26890000e-01,
        -5.14650000e-01,   6.67050000e-02,  -3.29330000e-01,
         1.34830000e-01,   1.90490000e-01,   1.38120000e-01,
        -2.15030000e-01,  -1.65730000e-02,   3.12000000e-01,
        -3.31890000e-01,  -2.60010000e-02,  -3.82030000e-01,
         1.94030000e-01,  -1.24660000e-01,  -2.75570000e-01,
         3.08990000e-01,   4.84970000e-01]), 'wrong': np.asarray([ 0.13423  , -0.70572  ,  0.25652  , -0.70702  ,  0.66891  ,
        0.078309 , -0.085091 ,  0.1273   , -0.25349  ,  0.0039005,
       -0.47367  ,  0.45491  , -0.85656  , -0.16408  ,  0.54799  ,
        0.36329  ,  0.33482  , -0.25919  , -0.01283  , -0.56152  ,
       -0.54376  ,  0.52644  ,  0.47671  ,  0.29848  ,  1.2667   ,
       -2.3394   , -0.93657  ,  0.6793   ,  0.93526  , -0.93051  ,
        2.2586   ,  0.017803 , -0.2772   , -0.57896  , -0.31235  ,
       -0.51586  ,  0.37149  ,  0.24718  ,  0.0073157, -0.25879  ,
       -0.036868 , -0.073569 ,  0.36549  ,  0.90229  , -0.019807 ,
        0.02628  , -0.078312 ,  0.43723  ,  0.90636  ,  0.51193  ]), 'with': np.asarray([ 0.25616 ,  0.43694 , -0.11889 ,  0.20345 ,  0.41959 ,  0.85863 ,
       -0.60344 , -0.31835 , -0.6718  ,  0.003984, -0.075159,  0.11043 ,
       -0.73534 ,  0.27436 ,  0.054015, -0.23828 , -0.13767 ,  0.011573,
       -0.46623 , -0.55233 ,  0.083317,  0.55938 ,  0.51903 , -0.27065 ,
       -0.28211 , -1.3918  ,  0.17498 ,  0.26586 ,  0.061449, -0.273   ,
        3.9032  ,  0.38169 , -0.056009, -0.004425,  0.24033 ,  0.30675 ,
       -0.12638 ,  0.33436 ,  0.075485, -0.036218,  0.13691 ,  0.37762 ,
       -0.12159 , -0.13808 ,  0.19505 ,  0.22793 , -0.17304 , -0.07573 ,
       -0.25868 , -0.39339 ]), 'totally': np.asarray([ 0.40695 , -1.4406  , -0.17813 , -0.21023 ,  0.36731 ,  0.26126 ,
        0.14239 ,  0.041061, -0.61054 ,  0.30215 ,  0.18146 , -0.049216,
       -0.64714 ,  0.028726,  0.70163 ,  0.72709 ,  0.73611 ,  0.54732 ,
        0.36596 , -0.11867 , -0.66232 ,  0.88739 ,  0.27436 ,  0.32745 ,
        0.9479  , -1.0829  , -0.48233 ,  1.179   ,  1.3878  , -0.11181 ,
        2.4607  , -0.71156 ,  0.17669 , -0.60554 , -0.88381 ,  0.083859,
        0.85267 ,  0.23708 , -0.77943 , -0.57827 , -0.098225, -0.98837 ,
        0.55839 ,  0.54079 , -0.36776 ,  0.17429 , -1.2801  ,  0.1565  ,
        0.68669 ,  0.27528 ]), 'deserve': np.asarray([-0.2927  ,  0.23329 , -0.14797 , -0.70162 ,  0.72223 , -0.45522 ,
        0.57729 ,  0.8525  ,  0.24885 ,  0.69968 , -0.34952 ,  0.19905 ,
        0.46813 , -0.74116 ,  0.81076 , -0.31371 ,  1.256   , -0.10886 ,
        0.69101 , -0.9245  , -1.0401  ,  0.52452 ,  0.036144, -0.25501 ,
        0.40509 , -1.0917  , -1.0773  , -0.40504 ,  0.26759 , -0.72016 ,
        1.6169  ,  1.3855  , -0.27887 , -0.54517 , -0.37724 ,  0.043132,
        0.44374 , -0.35941 , -0.21471 , -0.97736 , -0.25303 , -0.16316 ,
        0.48472 ,  0.63338 , -0.29871 ,  0.07218 , -0.95737 ,  0.90857 ,
       -0.33246 ,  0.58163 ]), 'this': np.asarray([  5.30740000e-01,   4.01170000e-01,  -4.07850000e-01,
         1.54440000e-01,   4.77820000e-01,   2.07540000e-01,
        -2.69510000e-01,  -3.40230000e-01,  -1.08790000e-01,
         1.05630000e-01,  -1.02890000e-01,   1.08490000e-01,
        -4.96810000e-01,  -2.51280000e-01,   8.40250000e-01,
         3.89490000e-01,   3.22840000e-01,  -2.27970000e-01,
        -4.43420000e-01,  -3.16490000e-01,  -1.24060000e-01,
        -2.81700000e-01,   1.94670000e-01,   5.55130000e-02,
         5.67050000e-01,  -1.74190000e+00,  -9.11450000e-01,
         2.70360000e-01,   4.19270000e-01,   2.02790000e-02,
         4.04050000e+00,  -2.49430000e-01,  -2.04160000e-01,
        -6.27620000e-01,  -5.47830000e-02,  -2.68830000e-01,
         1.84440000e-01,   1.82040000e-01,  -2.35360000e-01,
        -1.61550000e-01,  -2.76550000e-01,   3.55060000e-02,
        -3.82110000e-01,  -7.51340000e-04,  -2.48220000e-01,
         2.81640000e-01,   1.28190000e-01,   2.87620000e-01,
         1.44400000e-01,   2.36110000e-01]), 'prize': np.asarray([ -3.31750000e-01,   1.82220000e+00,   8.75410000e-02,
        -1.40560000e-01,   7.38970000e-01,   3.04110000e-01,
        -2.19000000e-01,  -1.79360000e-01,   3.07550000e-01,
         8.46860000e-01,  -1.40850000e-01,  -1.41740000e-01,
         4.40420000e-02,  -3.56610000e-01,   1.46540000e+00,
        -1.04980000e+00,   1.39100000e+00,   2.17210000e-01,
        -1.17070000e+00,  -8.76680000e-02,   1.10820000e+00,
         3.37220000e-02,   2.06300000e-02,  -8.37090000e-01,
         4.31150000e-01,  -1.28140000e+00,  -1.14860000e+00,
        -1.17030000e+00,  -1.83450000e+00,   4.89060000e-02,
         1.39210000e+00,   8.02030000e-05,  -1.12170000e+00,
        -1.83780000e-01,  -4.54920000e-01,  -3.05920000e-01,
         1.57010000e-02,   1.08040000e+00,   2.03810000e-01,
        -7.59700000e-01,   6.51700000e-01,   2.47660000e-01,
        -3.20510000e-01,  -5.75430000e-01,  -8.30970000e-01,
        -4.06410000e-01,  -2.42570000e-01,   2.15200000e-01,
        -5.77180000e-01,  -7.95250000e-01]), 'let': np.asarray([ 0.067025 , -0.010427 ,  0.61778  , -0.29952  ,  0.68244  ,
       -0.53138  , -0.0049878,  0.67877  , -0.3801   ,  0.1606   ,
       -0.054663 ,  0.85439  , -0.48949  ,  0.091105 ,  0.79834  ,
        0.83093  ,  0.79013  , -0.31992  ,  0.27924  , -1.1659   ,
       -0.0048596,  0.20945  ,  0.5982   ,  0.59395  ,  0.50349  ,
       -1.8205   , -0.31137  , -0.073957 ,  1.0215   , -1.0536   ,
        2.9803   ,  0.83399  , -1.1412   ,  0.15333  , -0.49095  ,
       -0.28432  ,  0.21243  , -0.37621  ,  0.46302  , -0.32079  ,
        0.18216  ,  0.20559  , -0.051854 ,  0.38381  ,  0.062563 ,
        0.20926  ,  0.21338  , -0.42741  , -0.19243  ,  0.42443  ]), 'us': np.asarray([ 0.19086  ,  0.24339  ,  1.2768   , -0.038207 ,  0.6094   ,
       -0.70188  ,  0.040862 , -0.44903  ,  0.0080416, -0.18819  ,
       -0.68578  , -0.12465  , -0.32855  , -0.073507 ,  0.79112  ,
        0.31981  ,  0.081126 , -0.033057 , -0.6007   ,  0.014536 ,
        0.42773  ,  0.71318  ,  0.13327  , -0.64247  ,  0.066402 ,
       -2.2346   ,  0.013668 , -0.45647  ,  0.40542  , -0.0042052,
        3.4561   ,  0.54602  , -0.3789   ,  0.58198  , -0.22852  ,
       -0.8409   , -0.30465  , -0.69669  , -0.4232   , -0.81757  ,
        0.036113 ,  0.25739  ,  1.745    , -0.61482  ,  0.41547  ,
        0.40002  , -0.51528  ,  0.89973  , -0.54324  ,  0.69393  ]), 'play': np.asarray([-0.73571 ,  0.19937 , -0.89408 ,  0.36406 , -0.20246 , -0.034324,
       -0.63138 ,  0.76669 , -0.94343 ,  0.65883 ,  0.049478,  0.55608 ,
       -1.2809  ,  0.44575 ,  0.73791 ,  0.014728,  0.80956 , -0.35516 ,
       -1.0248  , -0.13845 , -0.47632 ,  0.32001 ,  0.35023 ,  0.77794 ,
        0.60233 , -1.2321  ,  0.043144, -0.41347 ,  0.34533 , -1.3093  ,
        3.4681  ,  0.9882  ,  0.038253, -0.33672 ,  0.30999 ,  0.6331  ,
        0.30798 ,  0.68528 , -0.21989 , -0.77505 , -0.036884,  0.051738,
       -0.25442 , -0.063405, -0.20665 ,  0.91281 ,  0.80133 , -0.075279,
       -0.44448 ,  0.47437 ]), 'football': np.asarray([-1.8209  ,  0.70094 , -1.1403  ,  0.34363 , -0.42266 , -0.92479 ,
       -1.3942  ,  0.28512 , -0.78416 , -0.52579 ,  0.89627 ,  0.35899 ,
       -0.80087 , -0.34636 ,  1.0854  , -0.087046,  0.63411 ,  1.1429  ,
       -1.6264  ,  0.41326 , -1.1283  , -0.16645 ,  0.17424 ,  0.99585 ,
       -0.81838 , -1.7724  ,  0.078281,  0.13382 , -0.59779 , -0.45068 ,
        2.5474  ,  1.0693  , -0.27017 , -0.75646 ,  0.24757 ,  1.0261  ,
        0.11329 ,  0.17668 , -0.23257 , -1.1561  , -0.10665 , -0.25377 ,
       -0.65102 ,  0.32393 , -0.58262 ,  0.88137 , -0.13465 ,  0.96903 ,
       -0.076259, -0.59909 ]), 'down': np.asarray([-0.1981  , -0.70847 ,  0.85857 , -0.48108 ,  0.51562 , -0.28924 ,
       -0.64311 , -0.41966 , -0.68718 , -0.12307 , -0.44594 , -0.35226 ,
       -0.84826 ,  0.12962 ,  0.20005 ,  0.48916 , -0.20257 , -0.53341 ,
       -0.96196 , -0.67681 ,  0.69808 ,  0.50599 ,  0.24012 , -0.72813 ,
        0.11396 , -1.8256  ,  0.8098  ,  0.65007 ,  0.73111 , -0.50325 ,
        3.5865  ,  0.30906 , -0.14279 ,  0.6753  , -0.074059, -0.45274 ,
       -0.28001 , -0.20383 ,  0.61044 , -0.24875 , -0.47409 ,  0.25916 ,
        0.41522 ,  0.15245 ,  0.093191, -0.091906,  0.40082 , -0.90268 ,
        0.30191 , -0.89862 ]), 'afternoon': np.asarray([ 0.13771 ,  0.15251 , -0.28598 ,  0.34615 ,  0.074422, -1.4899  ,
       -1.027   ,  0.88307 , -0.60113 , -0.57746 , -0.72624 , -1.2508  ,
        0.10787 ,  0.23726 ,  0.50235 ,  0.27648 , -1.3065  , -0.4129  ,
       -1.1716  , -0.6428  ,  0.81788 ,  1.1329  ,  0.46562 , -0.3858  ,
        0.43708 , -0.83755 ,  0.47821 ,  1.13    ,  0.17396 ,  0.26338 ,
        2.9635  ,  0.28777 ,  0.027204,  0.26936 ,  0.33261 , -0.55208 ,
        0.31409 ,  0.067098,  0.17907 ,  0.214   , -0.59494 ,  0.41803 ,
       -0.275   , -0.26227 ,  0.54372 ,  0.083923,  0.04968 , -0.1062  ,
        0.080406,  0.11109 ]), 'work': np.asarray([  5.13590000e-01,   1.96950000e-01,  -5.19440000e-01,
        -8.62180000e-01,   1.54940000e-02,   1.09730000e-01,
        -8.02930000e-01,  -3.33610000e-01,  -1.61190000e-04,
         1.01890000e-02,   4.67340000e-02,   4.67510000e-01,
        -4.74750000e-01,   1.10380000e-01,   3.93270000e-01,
        -4.36520000e-01,   3.99840000e-01,   2.71090000e-01,
         4.26500000e-01,  -6.06400000e-01,   8.11450000e-01,
         4.56300000e-01,  -1.27260000e-01,  -2.24740000e-01,
         6.40710000e-01,  -1.27670000e+00,  -7.22310000e-01,
        -6.95900000e-01,   2.80450000e-02,  -2.30720000e-01,
         3.79960000e+00,  -1.26250000e-01,  -4.79670000e-01,
        -9.99720000e-01,  -2.19760000e-01,   5.05650000e-01,
         2.59530000e-02,   8.05140000e-01,   1.99290000e-01,
         2.87960000e-01,  -1.59150000e-01,  -3.04380000e-01,
         1.60250000e-01,  -1.82900000e-01,  -3.85630000e-02,
        -1.76190000e-01,   2.70410000e-02,   4.68420000e-02,
        -6.28970000e-01,   3.57260000e-01]), 'hard': np.asarray([-0.53079 , -0.21965 ,  0.53268 , -0.23144 ,  0.074339, -0.065505,
       -0.10421 ,  0.30725 , -0.49644 ,  0.65372 , -0.38484 , -0.16258 ,
       -0.6452  ,  0.36771 ,  0.089541,  0.33131 ,  0.72552 , -0.05129 ,
        0.36862 , -0.89896 , -0.53229 ,  0.33536 ,  0.19408 ,  0.18393 ,
        0.5277  , -1.8321  , -0.53567 ,  0.11963 ,  0.87309 , -0.40913 ,
        3.5748  ,  0.168   , -0.26982 ,  0.1895  , -0.15528 ,  0.23055 ,
       -0.30747 ,  0.44402 ,  0.14332 , -0.56575 , -0.13017 ,  0.2943  ,
       -0.052564,  0.40329 ,  0.45792 ,  0.3516  , -0.019691, -0.20061 ,
       -0.24725 , -0.030552]), 'harder': np.asarray([-0.29399 , -0.79617 ,  0.67096 , -0.66914 , -0.19887 ,  0.12998 ,
        0.092694,  0.3473  , -0.24361 ,  0.52228 , -0.1028  ,  0.19513 ,
       -0.40637 ,  0.2347  ,  0.13594 ,  0.78369 ,  0.97587 , -0.16608 ,
        0.67398 , -0.99359 , -0.11845 ,  0.026627,  0.27858 ,  0.31713 ,
        0.66437 , -1.4722  , -0.11494 , -0.10703 ,  0.90995 , -0.59183 ,
        2.4475  ,  0.53444 , -0.020802, -0.19736 ,  0.12    , -0.15844 ,
       -0.41524 ,  0.52509 , -0.074545, -0.6972  , -0.67977 , -0.030141,
        0.64788 ,  0.31299 ,  0.43638 , -0.17408 ,  0.35904 ,  0.093447,
       -0.091229,  0.47121 ]), 'it': np.asarray([ 0.61183 , -0.22072 , -0.10898 , -0.052967,  0.50804 ,  0.34684 ,
       -0.33558 , -0.19152 , -0.035865,  0.1051  ,  0.07935 ,  0.2449  ,
       -0.4373  , -0.33344 ,  0.57479 ,  0.69052 ,  0.29713 ,  0.090669,
       -0.54992 , -0.46176 ,  0.10113 , -0.02024 ,  0.28479 ,  0.043512,
        0.45735 , -2.0466  , -0.58084 ,  0.61797 ,  0.6518  , -0.58263 ,
        4.0786  , -0.2542  , -0.14649 , -0.34321 , -0.25437 , -0.44677 ,
        0.12657 ,  0.28134 ,  0.13331 , -0.36974 ,  0.050059, -0.10058 ,
       -0.017907,  0.11142 , -0.71798 ,  0.491   , -0.099974, -0.043688,
       -0.097922,  0.16806 ]), 'suprising': np.asarray([ 0.14763  , -0.66334  ,  0.22033  ,  0.16203  ,  0.90019  ,
        0.16227  ,  0.8552   ,  0.84747  , -0.33919  ,  0.8899   ,
       -0.058219 , -0.54394  ,  0.56183  , -0.15908  , -0.063711 ,
        0.46336  ,  0.35028  , -0.25461  , -0.0028344, -0.12028  ,
       -0.76789  , -0.24549  , -0.29706  , -0.20956  ,  0.58641  ,
        0.5831   , -0.29427  ,  0.63722  ,  0.75541  , -0.23802  ,
       -1.069    ,  0.35444  ,  0.62498  , -0.084038 ,  0.47742  ,
       -0.32221  ,  0.34878  ,  0.59345  , -0.97995  , -0.73965  ,
        0.03104  , -0.48903  , -0.12942  ,  0.58871  , -0.65699  ,
        0.046639 , -0.0059467,  1.0374   ,  0.16819  ,  0.25654  ]), 'how': np.asarray([  6.89380000e-01,  -1.06440000e-01,   1.70830000e-01,
        -3.75830000e-01,   7.51700000e-01,   7.81490000e-04,
        -5.31020000e-01,  -1.99030000e-01,  -1.44190000e-01,
         1.27480000e-01,  -2.80380000e-01,   7.07230000e-01,
        -5.41000000e-01,   1.96250000e-01,   9.66350000e-01,
         6.05190000e-01,   4.09180000e-01,  -3.16120000e-02,
         5.39000000e-01,  -8.70860000e-01,  -2.09120000e-01,
         5.68530000e-01,   6.59830000e-01,   1.45830000e-01,
         1.01120000e+00,  -2.07360000e+00,  -1.12420000e+00,
         5.96620000e-04,   7.03320000e-01,  -8.26080000e-01,
         3.44450000e+00,   3.29840000e-01,  -3.53240000e-01,
        -1.03350000e+00,  -1.47530000e-01,  -1.48740000e-01,
        -4.12460000e-01,   3.34890000e-01,   1.98410000e-01,
        -2.54780000e-01,  -4.71930000e-01,   6.67010000e-02,
         3.27770000e-01,   6.87810000e-01,   3.64280000e-01,
         2.15220000e-01,   1.64940000e-01,   4.17610000e-01,
        -2.25040000e-01,   6.14120000e-01]), 'people': np.asarray([ 0.95281  , -0.20608  ,  0.55618  , -0.46323  ,  0.73354  ,
        0.029137 , -0.19367  , -0.090066 , -0.22958  , -0.19058  ,
       -0.34857  , -1.0231   ,  0.743    , -0.5489   ,  0.88484  ,
       -0.14051  ,  0.0040139,  0.58448  ,  0.10767  , -0.44657  ,
       -0.43205  ,  0.9868   ,  0.78288  ,  0.51513  ,  0.85788  ,
       -1.7713   , -0.88259  , -0.59728  ,  0.084934 , -0.48112  ,
        3.9678   ,  0.8893   , -0.27064  , -0.44094  , -0.26213  ,
        0.085597 ,  0.022099 , -0.58376  ,  0.10908  ,  0.77973  ,
       -0.95447  ,  0.40482  ,  0.8941   ,  0.65251  ,  0.39858  ,
        0.20884  , -1.3281   , -0.10882  , -0.22822  , -0.46303  ]), 'can': np.asarray([ 0.8052  ,  0.37121 ,  0.55933 , -0.011405,  0.17319 ,  0.195   ,
        0.057701, -0.12447 , -0.011342,  0.20654 ,  0.41079 ,  0.89578 ,
        0.31893 ,  0.030787,  0.60194 ,  1.2023  ,  0.68283 , -0.13267 ,
        0.16984 , -1.4674  , -0.41844 , -0.47395 ,  0.7267  ,  0.61088 ,
        0.44584 , -1.4793  , -0.50037 , -0.12249 ,  0.75994 , -0.77112 ,
        3.9653  ,  0.38077 , -0.6439  , -0.84899 ,  0.07554 ,  0.17522 ,
        0.30117 ,  0.12964 ,  0.27253 , -0.32951 ,  0.34211 ,  0.15608 ,
        0.20953 ,  0.97948 ,  0.35927 ,  0.19116 ,  0.45494 , -0.1895  ,
       -0.20902 ,  0.47612 ]), 'be': np.asarray([  9.11020000e-01,  -2.28720000e-01,   2.07700000e-01,
        -2.02370000e-01,   5.06970000e-01,  -5.78930000e-02,
        -4.17290000e-01,  -7.53410000e-02,  -3.04540000e-01,
        -3.28600000e-03,   4.44810000e-01,   4.18180000e-01,
        -3.34090000e-01,   3.29170000e-02,   9.88720000e-01,
         9.19840000e-01,   4.05210000e-01,   1.92500000e-02,
        -1.05200000e-01,  -7.98650000e-01,  -3.64030000e-01,
        -8.79950000e-02,   7.21820000e-01,   1.11140000e-01,
         2.15300000e-01,  -1.94110000e+00,  -2.63760000e-01,
         4.45500000e-01,   2.75860000e-01,  -2.11040000e-01,
         4.02120000e+00,  -6.19430000e-02,  -3.21340000e-01,
        -8.19220000e-01,   2.10800000e-01,  -2.04140000e-01,
         7.26250000e-01,   4.75170000e-01,  -3.98530000e-01,
        -3.91680000e-01,  -3.45810000e-01,   2.59280000e-02,
         1.30720000e-01,   7.35620000e-01,  -1.51990000e-01,
        -1.84390000e-01,  -6.71280000e-01,   1.66920000e-01,
        -5.00630000e-02,   1.92410000e-01]), 'dumb': np.asarray([-0.50578  , -0.69265  , -0.019215 , -0.62411  ,  0.2218   ,
        0.4589   ,  0.3598   , -0.71224  , -1.2021   ,  0.81237  ,
       -0.71109  ,  1.1141   , -0.0081467,  0.63739  ,  0.37285  ,
        0.16493  ,  0.62563  ,  1.2656   , -0.071614 , -0.22088  ,
       -0.071549 ,  0.5851   ,  0.15531  ,  0.79637  ,  1.1118   ,
       -1.3115   , -0.7694   ,  0.70862  ,  1.4785   , -1.2291   ,
        0.94624  ,  0.25398  ,  0.44926  ,  0.31991  ,  0.30786  ,
        0.39901  ,  0.38909  , -0.44259  , -0.18133  , -0.26765  ,
       -0.30712  ,  0.34618  ,  0.52472  ,  0.75486  ,  0.20978  ,
        0.3054   ,  0.063189 ,  0.16984  ,  0.9853   ,  1.026    ]), 'sometimes': np.asarray([  4.97020000e-01,   1.54370000e-02,  -6.15460000e-01,
        -7.50060000e-01,   1.40330000e-01,   5.93800000e-01,
        -4.83290000e-02,   1.39340000e-01,  -7.14620000e-01,
         1.73350000e-01,  -2.03600000e-01,   4.93050000e-01,
         4.17080000e-01,   7.85330000e-02,   2.11430000e-01,
         7.67770000e-02,  -5.32770000e-02,  -9.78390000e-04,
        -7.30050000e-02,  -1.11040000e+00,  -4.32720000e-01,
         1.03090000e-01,   8.75370000e-01,   6.27400000e-01,
         6.43800000e-01,  -1.38320000e+00,  -6.68540000e-01,
         6.91580000e-01,   8.70800000e-01,  -2.87140000e-01,
         3.29350000e+00,  -1.13990000e-01,   4.66780000e-01,
        -6.66330000e-01,   8.79330000e-03,   3.69880000e-01,
        -1.66240000e-01,   1.02770000e-01,  -5.63190000e-01,
        -5.78050000e-02,  -4.68200000e-02,   3.14070000e-01,
         3.92530000e-02,   9.92000000e-01,   4.64110000e-01,
        -2.99360000e-01,   9.77870000e-02,  -3.40170000e-01,
        -1.02060000e-01,   1.01460000e-01]), 'very': np.asarray([  5.70490000e-01,  -7.78540000e-03,  -7.07660000e-01,
        -3.17850000e-01,   8.94930000e-01,  -1.61280000e-02,
        -6.71490000e-02,   1.57650000e-01,  -4.98320000e-01,
         2.58450000e-01,   1.09430000e-01,   3.67280000e-01,
        -1.48430000e-01,   6.32860000e-02,   2.08320000e-01,
         4.59200000e-01,   7.17810000e-01,   2.27720000e-01,
        -1.53490000e-03,  -9.30930000e-01,  -8.00480000e-01,
         4.67140000e-01,   4.15710000e-01,   1.75720000e-01,
         1.08760000e+00,  -1.61160000e+00,  -7.09430000e-01,
         8.37720000e-01,   6.70810000e-01,   1.81390000e-01,
         3.98990000e+00,  -1.02700000e-01,   4.39000000e-01,
        -6.79260000e-01,   1.18610000e-01,  -2.01820000e-01,
        -8.16030000e-02,   9.07390000e-01,  -5.22580000e-01,
        -4.84260000e-01,  -3.13260000e-01,   1.03250000e-01,
         1.30360000e-01,   3.51150000e-01,   3.75930000e-01,
         6.43880000e-02,  -2.25900000e-01,   7.91250000e-02,
         1.25730000e-01,   8.39390000e-01]), 'disappointed': np.asarray([ -2.26850000e-02,  -8.59230000e-01,   4.94770000e-02,
        -1.76060000e-01,   6.49410000e-01,  -5.41910000e-01,
        -5.57310000e-01,   1.20370000e+00,  -7.94210000e-01,
         3.26720000e-01,   1.31170000e-01,  -6.61060000e-03,
        -6.74980000e-01,  -5.30800000e-01,   9.82690000e-01,
         6.52160000e-01,   4.18660000e-01,  -2.64900000e-01,
         8.61920000e-02,  -8.99270000e-01,  -6.62510000e-01,
         7.08420000e-01,   1.02790000e-01,   3.72340000e-02,
         1.24160000e+00,  -1.39990000e+00,  -3.47430000e-01,
         5.89470000e-01,  -2.46080000e-01,  -5.81110000e-02,
         1.67440000e+00,   5.83940000e-01,   5.69900000e-01,
        -2.61740000e-01,  -3.35120000e-01,  -1.25320000e+00,
         4.40940000e-01,   2.27650000e-01,  -3.41980000e-01,
        -1.02270000e+00,  -3.96040000e-01,  -3.15110000e-01,
         3.57690000e-03,   1.51520000e-01,   3.83440000e-01,
         3.93690000e-01,  -1.05010000e+00,   6.99150000e-01,
        -7.83640000e-04,   6.03560000e-01]), 'best': np.asarray([ -9.15720000e-01,   6.03450000e-01,  -3.10770000e-01,
         2.84330000e-01,   5.46100000e-01,  -3.92290000e-03,
        -9.46400000e-01,  -3.02100000e-01,   7.11500000e-02,
         8.23850000e-01,  -1.69490000e-01,   4.10540000e-01,
        -4.86220000e-01,   6.14830000e-01,   7.04680000e-01,
        -6.00320000e-01,   8.93820000e-01,   1.17810000e-01,
        -7.78310000e-01,  -5.22060000e-01,  -1.00770000e-01,
         3.83920000e-01,   2.78920000e-01,   3.72020000e-01,
         4.93740000e-01,  -1.14950000e+00,  -1.15050000e+00,
        -7.20890000e-01,  -3.80900000e-02,  -4.56990000e-01,
         3.34250000e+00,   5.66600000e-01,   8.89440000e-04,
        -2.00300000e-01,   5.36620000e-01,   2.84780000e-01,
        -8.38220000e-02,   9.75350000e-01,  -3.59850000e-01,
        -1.08180000e+00,  -5.15550000e-02,   3.04530000e-01,
         4.71550000e-03,  -2.52140000e-01,  -3.51510000e-01,
         2.61350000e-01,   1.99980000e-01,  -5.60320000e-02,
         7.49880000e-02,   7.60920000e-01]), 'day': np.asarray([ 0.11626 ,  0.53897 , -0.39514 , -0.26027 ,  0.57706 , -0.79198 ,
       -0.88374 ,  0.30119 ,  0.082896, -0.33443 , -0.64467 , -0.75366 ,
       -0.30356 ,  0.07884 ,  1.2252  , -0.038627, -0.47341 , -0.40556 ,
       -1.1165  , -0.21352 ,  0.49275 ,  0.55574 ,  0.38941 , -0.22514 ,
        0.37775 , -1.4233  , -0.13409 ,  0.10737 ,  0.16528 ,  0.35527 ,
        3.5733  ,  0.76404 , -0.59226 ,  0.51366 ,  0.12055 , -0.36967 ,
        0.43251 ,  0.086429,  0.034554,  0.082458, -0.8792  ,  0.26134 ,
       -0.32132 , -0.12652 ,  0.25573 ,  0.32818 ,  0.024073, -0.39062 ,
       -0.10885 ,  0.084513]), 'in': np.asarray([ 0.33042  ,  0.24995  , -0.60874  ,  0.10923  ,  0.036372 ,
        0.151    , -0.55083  , -0.074239 , -0.092307 , -0.32821  ,
        0.09598  , -0.82269  , -0.36717  , -0.67009  ,  0.42909  ,
        0.016496 , -0.23573  ,  0.12864  , -1.0953   ,  0.43334  ,
        0.57067  , -0.1036   ,  0.20422  ,  0.078308 , -0.42795  ,
       -1.7984   , -0.27865  ,  0.11954  , -0.12689  ,  0.031744 ,
        3.8631   , -0.17786  , -0.082434 , -0.62698  ,  0.26497  ,
       -0.057185 , -0.073521 ,  0.46103  ,  0.30862  ,  0.12498  ,
       -0.48609  , -0.0080272,  0.031184 , -0.36576  , -0.42699  ,
        0.42164  , -0.11666  , -0.50703  , -0.027273 , -0.53285  ]), 'life': np.asarray([ 0.51491 ,  0.88806 , -0.71906 , -0.5748  ,  0.85655 ,  0.52474 ,
       -0.31788 , -0.20168 ,  0.17936 ,  0.51999 , -0.11527 ,  0.59296 ,
       -0.3468  ,  0.052568,  0.87153 , -0.036582, -0.056057,  0.08516 ,
        0.036249,  0.23403 ,  0.073175,  1.1394  , -0.17921 , -0.034245,
        0.69977 , -1.6516  , -1.106   , -0.44145 ,  0.77042 ,  0.23963 ,
        3.1823  , -0.020451, -0.056117, -0.69918 , -0.19543 ,  0.19492 ,
       -0.36403 ,  0.053196,  0.26225 , -0.29054 , -0.64883 , -0.057846,
        0.21646 ,  0.40237 , -0.1413  , -0.015453, -0.11988 , -0.99837 ,
       -0.066328,  0.13118 ]), 'think': np.asarray([-0.1166   , -0.010887 ,  0.044444 , -0.39349  ,  0.77743  ,
       -0.35689  , -0.42073  , -0.12338  , -0.58818  ,  0.3166   ,
       -0.3084   ,  0.4558   , -0.83117  ,  0.0231   ,  0.88091  ,
        0.71288  ,  1.1223   ,  0.13017  ,  0.017489 , -0.82336  ,
       -0.65853  ,  0.63098  ,  0.34655  ,  0.25429  ,  0.9928   ,
       -2.2232   , -1.1191   ,  0.26796  ,  0.71472  , -0.76952  ,
        3.0569   ,  0.75397  , -0.34325  , -0.60568  , -0.4142   ,
       -0.8      , -0.17019  ,  0.35416  ,  0.29577  , -0.51743  ,
       -0.48561  ,  0.0161   ,  0.10267  ,  0.52783  ,  0.32212  ,
        0.26552  , -0.23728  ,  0.44057  ,  0.0064518,  1.2454   ]), 'will': np.asarray([  8.15440000e-01,   3.01710000e-01,   5.47200000e-01,
         4.65810000e-01,   2.85310000e-01,  -5.61120000e-01,
        -4.39130000e-01,  -9.08770000e-03,   1.00020000e-01,
        -1.72180000e-01,   2.81330000e-01,   3.76720000e-01,
        -4.07560000e-01,   1.58360000e-01,   8.91130000e-01,
         1.29970000e+00,   5.15080000e-01,  -1.94800000e-01,
         5.18560000e-02,  -9.33800000e-01,   6.99550000e-02,
        -2.48760000e-01,  -1.67230000e-02,  -2.03100000e-01,
        -3.35580000e-02,  -1.81320000e+00,   1.11990000e-01,
        -3.19610000e-01,  -1.37460000e-01,  -4.54990000e-01,
         3.88560000e+00,   1.21400000e+00,  -1.00460000e+00,
        -5.62740000e-02,   3.87760000e-03,  -4.06690000e-01,
         2.94520000e-01,   3.01710000e-01,   3.88480000e-02,
        -5.60880000e-01,  -4.65820000e-01,   1.71550000e-01,
         3.37290000e-01,  -1.52470000e-01,   2.37710000e-02,
         5.14150000e-01,  -2.17590000e-01,   3.19650000e-01,
        -3.47410000e-01,   4.16720000e-01]), 'end': np.asarray([-0.04116 ,  0.22243 , -0.11458 , -0.33628 ,  0.038872, -0.066803,
       -0.58309 , -0.19971 , -0.51087 , -0.29037 , -0.49177 , -0.13533 ,
       -1.0737  , -0.4156  ,  0.81837 ,  0.47902 ,  0.078869, -0.60318 ,
       -0.5732  ,  0.065613,  0.21122 , -0.20912 , -0.27305 , -0.21332 ,
       -0.077237, -1.4695  ,  0.46413 ,  0.1222  ,  0.80235 ,  0.25796 ,
        3.7452  ,  0.14293 , -0.51556 ,  0.34662 ,  0.12782 , -0.21896 ,
        0.15115 , -0.2969  , -0.37945 , -0.41931 , -0.74006 , -0.10499 ,
       -0.31756 , -0.23893 , -0.40606 ,  0.24247 ,  0.55832 , -0.1801  ,
       -0.37332 , -0.18039 ]), 'up': np.asarray([ 0.032286 , -0.27071  ,  0.68108  , -0.27942  ,  0.5797   ,
       -0.0081097, -0.82792  , -0.53342  , -0.47851  , -0.068256 ,
       -0.46964  , -0.31717  , -0.49372  ,  0.09808  ,  0.49961  ,
        0.27305  ,  0.099922 , -0.16148  , -0.69952  , -0.70435  ,
        0.59084  ,  0.62031  ,  0.30467  , -0.41578  , -0.0222   ,
       -1.6312   ,  0.54676  ,  0.25754  ,  0.44541  , -0.72799  ,
        3.9129   ,  0.80075  , -0.18839  ,  0.42435  ,  0.039207 ,
       -0.093939 , -0.39516  ,  0.20976  ,  0.59488  , -0.3907   ,
       -0.31555  ,  0.24074  ,  0.41694  ,  0.10415  , -0.044305 ,
       -0.09516  ,  0.25464  , -0.56699  ,  0.033216 , -0.58123  ]), 'alone': np.asarray([ 0.5357  , -0.10067 ,  0.53897 , -0.36807 ,  0.67909 ,  0.31371 ,
       -0.26976 , -0.16813 ,  0.12638 ,  0.23458 ,  0.1364  , -0.45599 ,
       -0.030773, -0.51339 ,  1.0718  ,  0.4463  ,  0.037857,  0.3219  ,
       -0.22648 , -0.12073 ,  0.14079 ,  0.54096 ,  0.29617 ,  0.06971 ,
        0.50718 , -1.2427  , -0.21958 ,  0.040117,  0.40179 , -0.38644 ,
        2.7514  ,  0.61158 , -0.03015 , -0.027541, -0.02719 , -0.23114 ,
        0.018789,  0.148   ,  0.28147 , -0.16007 , -0.53388 ,  0.10427 ,
        0.51568 , -0.025971, -0.60817 , -0.077016, -0.16988 , -0.41623 ,
       -0.22232 ,  0.16686 ]), 'boring': np.asarray([-0.035674, -0.41765 , -0.44104 , -0.35455 , -0.28748 , -0.25642 ,
        0.13326 ,  0.020065, -0.66321 ,  0.12049 , -1.0205  , -0.029451,
       -0.25333 ,  0.56927 ,  0.51631 ,  0.11365 ,  0.33299 ,  1.074   ,
        0.070584, -0.75984 , -0.2908  ,  0.56506 ,  0.54392 ,  0.66245 ,
        1.1402  , -0.56075 , -0.99398 ,  1.1002  ,  1.1428  , -0.1684  ,
        1.3748  , -0.45543 ,  0.38396 , -0.011839, -0.087978,  0.32026 ,
        0.28684 ,  0.88902 , -0.18163 , -0.54099 , -0.16129 , -0.38781 ,
        0.042476,  1.313   ,  0.20165 ,  0.12567 ,  0.37838 , -0.041809,
        0.37791 ,  0.98184 ]), 'good': np.asarray([ -3.55860000e-01,   5.21300000e-01,  -6.10700000e-01,
        -3.01310000e-01,   9.48620000e-01,  -3.15390000e-01,
        -5.98310000e-01,   1.21880000e-01,  -3.19430000e-02,
         5.56950000e-01,  -1.06210000e-01,   6.33990000e-01,
        -4.73400000e-01,  -7.58950000e-02,   3.82470000e-01,
         8.15690000e-02,   8.22140000e-01,   2.22200000e-01,
        -8.37640000e-03,  -7.66200000e-01,  -5.62530000e-01,
         6.17590000e-01,   2.02920000e-01,  -4.85980000e-02,
         8.78150000e-01,  -1.65490000e+00,  -7.74180000e-01,
         1.54350000e-01,   9.48230000e-01,  -3.95200000e-01,
         3.73020000e+00,   8.28550000e-01,  -1.41040000e-01,
         1.63950000e-02,   2.11150000e-01,  -3.60850000e-02,
        -1.55870000e-01,   8.65830000e-01,   2.63090000e-01,
        -7.10150000e-01,  -3.67700000e-02,   1.82820000e-03,
        -1.77040000e-01,   2.70320000e-01,   1.10260000e-01,
         1.41330000e-01,  -5.73220000e-02,   2.72070000e-01,
         3.13050000e-01,   9.27710000e-01]), 'great': np.asarray([-0.026567,  1.3357  , -1.028   , -0.3729  ,  0.52012 , -0.12699 ,
       -0.35433 ,  0.37824 , -0.29716 ,  0.093894, -0.034122,  0.92961 ,
       -0.14023 , -0.63299 ,  0.020801, -0.21533 ,  0.96923 ,  0.47654 ,
       -1.0039  , -0.24013 , -0.36325 , -0.004757, -0.5148  , -0.4626  ,
        1.2447  , -1.8316  , -1.5581  , -0.37465 ,  0.53362 ,  0.20883 ,
        3.2209  ,  0.64549 ,  0.37438 , -0.17657 , -0.024164,  0.33786 ,
       -0.419   ,  0.40081 , -0.11449 ,  0.051232, -0.15205 ,  0.29855 ,
       -0.44052 ,  0.11089 , -0.24633 ,  0.66251 , -0.26949 , -0.49658 ,
       -0.41618 , -0.2549  ]), 'awesome': np.asarray([-0.35848 , -0.1155  ,  0.11371 ,  0.46814 ,  0.7495  , -0.61523 ,
        0.47639 ,  0.090754,  0.3689  ,  0.50331 , -0.22467 ,  0.234   ,
       -0.64901 ,  0.055667,  0.30192 , -0.13536 ,  0.93473 ,  0.88677 ,
       -0.70756 , -0.48408 , -0.90625 ,  0.62314 , -0.18793 , -0.5102  ,
        1.2565  , -0.28897 , -1.2819  ,  0.30284 ,  1.0423  , -0.54885 ,
        1.0054  ,  0.62053 ,  0.31879 , -0.060822, -0.24919 ,  0.5019  ,
        0.41171 ,  0.13648 , -0.49815 , -0.59822 , -0.16876 , -0.26096 ,
       -0.53283 ,  0.20083 , -0.19095 , -0.028693,  0.090843, -0.11063 ,
       -0.040858,  0.88439 ])}

diw[70] = 'cucumber'
dwi['cucumber'] = 70

d['cucumber'] = np.asarray([ 0.68224 , -0.31608 , -0.95201 ,  0.47108 ,  0.56571 ,  0.13151 ,
        0.22457 ,  0.094995, -1.3237  , -0.51545 , -0.39337 ,  0.88488 ,
        0.93826 ,  0.22931 ,  0.088624, -0.53908 ,  0.23396 ,  0.73245 ,
       -0.019123, -0.26552 , -0.40433 , -1.5832  ,  1.1316  ,  0.4419  ,
       -0.48218 ,  0.4828  ,  0.14938 ,  1.1245  ,  1.0159  , -0.50213 ,
        0.83831 , -0.31303 ,  0.083242,  1.7161  ,  0.15024 ,  1.0324  ,
       -1.5005  ,  0.62348 ,  0.54508 , -0.88484 ,  0.53279 , -0.085119,
        0.02141 , -0.56629 ,  1.1463  ,  0.6464  ,  0.78318 , -0.067662,
        0.22884 , -0.042453])

class suppress_stdout_stderr(object):
    '''
    A context manager for doing a "deep suppression" of stdout and stderr in 
    Python, i.e. will suppress all print, even if the print originates in a 
    compiled C/Fortran sub-function.
       This will not suppress raised exceptions, since exceptions are printed
    to stderr just before a script exits, and after the context manager has
    exited (at least, I think that is why it lets exceptions through).      

    '''
    def __init__(self):
        # Open a pair of null files
        self.null_fds =  [os.open(os.devnull,os.O_RDWR) for x in range(2)]
        # Save the actual stdout (1) and stderr (2) file descriptors.
        self.save_fds = [os.dup(1), os.dup(2)]

    def __enter__(self):
        # Assign the null pointers to stdout and stderr.
        os.dup2(self.null_fds[0],1)
        os.dup2(self.null_fds[1],2)

    def __exit__(self, *_):
        # Re-assign the real stdout/stderr back to (1) and (2)
        os.dup2(self.save_fds[0],1)
        os.dup2(self.save_fds[1],2)
        # Close all file descriptors
        for fd in self.null_fds + self.save_fds:
            os.close(fd)


# with suppress_stdout_stderr():
with stdout_redirector.stdout_redirected():
       sta = sentence_to_avg('I am going to the bar tonight',d)
       # generating the the model 
       p,w,b = model(X, Y, d, learning_rate = 0.01, num_iterations = 300)
       # generating the sentences_to_indices
       a = sentences_to_indices(X, dwi, 20)
       from keras.models import Sequential
       from keras.initializers import glorot_uniform
       # generating the test cases for pretrain_embedding_layer
       # model2 = Sequential()
       # model2.add(pretrained_embedding_layer(d, dwi))
       # # compile the model
       # model2.compile(optimizer='adam', loss='binary_crossentropy', metrics=['acc'])
       # ct = model2.count_params()
       # summarize the model


       embedding_layer = pretrained_embedding_layer(d, dwi)
       el = embedding_layer.get_weights()[0][1][3]
       

       np.random.seed(3)

       m = Emojify_V2((10,), d, dwi)
       cp = m.count_params()
       ml = len(m.layers)
       mi = len(m.inputs)
       mo = len(m.outputs)


def generateTestCases():
	testCases = {
	    'sentence_to_avg': {
	        'partId': 'Ub0em',
	        'testCases': [
	            {
	                'testInput': ('I am going to the bar tonight',d),
	                'testOutput': sta
	            }
	        ]
	    },
	    'model': { 
	        'partId': 'EDw3y',
	        'testCases': [
	            {
	                'testInput': (X, Y, d, 0.01, 300),
	                'testOutput': (p,w,b)
	            }
	        ]
	    },
	    'sentences_to_indices': { 
	        'partId': 'ELQ6c',
	        'testCases': [
	            {
	                'testInput': (X, dwi, 20),
	                'testOutput': a
	            }
	        ]
	    },
	    'pretrained_embedding_layer': { 
	        'partId': 'pEJr9',
	        'testCases': [
	            {
	                'testInput': (d, dwi),
	                'testOutput': el
	            }
	        ]
	    },
      'Emojify_V2': { 
          'partId': 'VRhCD',
          'testCases': [
              {
                  'testInput': (d, dwi),
                  'testOutput': (cp, ml, mi, mo)
              }
          ]
       }
       }
	return testCases

